{"version":3,"sources":["../../../../../src/initializer/roles-assembler/route-to-role-linker/_lib/route-getter.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAe,QAAQ,CAAC;AACrC,OAAO,eAAe,MAAM,oBAAoB,CAAC;AAEjD,MAAM,CAAC,OAAO,sBAAsB,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ;IACvE,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;IAEzB,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACT,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEG,IAAA;;MAEF,EAFG,iBAAS,EAAE,iBAAS,CAEtB;IAEH,EAAE,CAAA,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACd,SAAS,GAAG,eAAe,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QACjD,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC5D,CAAC","file":"route-getter.js","sourceRoot":"","sourcesContent":["import * as _          from 'lodash';\nimport routeSterilizer from './route-sterilizer';\n\nexport default function routeGetter(paths, roleRoute, mainRoute, roleName) {\n  let path = paths.shift();\n\n  if(!path) {\n    return roleRoute;\n  }\n  \n  let [roleChild, mainChild] = [roleRoute, mainRoute].map(route => {\n    return _.filter(route.children, {path})[0];\n  });\n\n  if(!roleChild) {\n    roleChild = routeSterilizer(mainChild, roleName);\n    roleRoute.children.push(roleChild);\n  }\n  \n  return routeGetter(paths, roleChild, mainChild, roleName);\n}\n"]}